#!/bin/bash

# SaturVST Development Build Script
# –£–¥–æ–±–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏

set -e  # Exit on any error

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}üéµ SaturVST Development Build Script${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  ./build_dev.sh [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo -e "  ${GREEN}build${NC}     - –ü–æ–ª–Ω–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo -e "  ${GREEN}quick${NC}     - –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ (—Ç–æ–ª—å–∫–æ –∫–æ–º–ø–∏–ª—è—Ü–∏—è)"
    echo -e "  ${GREEN}run${NC}       - –°–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫ Standalone –≤–µ—Ä—Å–∏–∏"
    echo -e "  ${GREEN}clean${NC}     - –û—á–∏—Å—Ç–∫–∞ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
    echo -e "  ${GREEN}rebuild${NC}   - –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ (clean + build)"
    echo -e "  ${GREEN}help${NC}      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./build_dev.sh run    # –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å"
    echo "  ./build_dev.sh quick  # –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞"
    echo ""
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –¥–ª—è git (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
setup_ssh() {
    if [ ! -z "$SSH_AUTH_SOCK" ]; then
        echo -e "${YELLOW}üì° SSH —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
    else
        echo -e "${YELLOW}üì° –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH –¥–ª—è git...${NC}"
        export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ JUCE
check_juce() {
    if [ ! -d "JUCE" ]; then
        echo -e "${YELLOW}üì¶ JUCE –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–ª–æ–Ω–∏—Ä—É–µ–º JUCE framework...${NC}"
        setup_ssh
        git clone https://github.com/juce-framework/JUCE.git
        echo -e "${GREEN}‚úÖ JUCE —É—Å–ø–µ—à–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω${NC}"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
create_build_dir() {
    if [ ! -d "build" ]; then
        mkdir build
        echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∞ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è${NC}"
    fi
}

# –ü–æ–ª–Ω–∞—è —Å–±–æ—Ä–∫–∞
full_build() {
    echo -e "${PURPLE}üéµ –ü–æ–ª–Ω–∞—è —Å–±–æ—Ä–∫–∞ SaturVST Plugin...${NC}"
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏
    echo -e "${BLUE}üìä –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏...${NC}"
    ./increment_version.sh
    
    check_juce
    create_build_dir
    
    cd build
    
    echo -e "${BLUE}‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º —Å CMake...${NC}"
    cmake ..
    
    echo -e "${BLUE}üî® –°–æ–±–∏—Ä–∞–µ–º –ø–ª–∞–≥–∏–Ω...${NC}"
    cmake --build . --config Release
    
    cd ..
    
    echo -e "${GREEN}üéâ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo ""
    echo -e "${YELLOW}Plugin —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤:${NC}"
    echo "  VST3: ~/Library/Audio/Plug-Ins/VST3/"
    echo "  AU:   ~/Library/Audio/Plug-Ins/Components/"
    echo ""
}

# –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ (—Ç–æ–ª—å–∫–æ –∫–æ–º–ø–∏–ª—è—Ü–∏—è)
quick_build() {
    echo -e "${PURPLE}‚ö° –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ SaturVST...${NC}"
    
    if [ ! -d "build" ]; then
        echo -e "${RED}‚ùå Build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å–±–æ—Ä–∫—É —Å–Ω–∞—á–∞–ª–∞.${NC}"
        exit 1
    fi
    
    cd build
    echo -e "${BLUE}üî® –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...${NC}"
    cmake --build . --config Release
    cd ..
    
    echo -e "${GREEN}‚ö° –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
build_and_run() {
    echo -e "${PURPLE}üéµ –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ SaturVST...${NC}"
    
    quick_build
    
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Standalone –≤–µ—Ä—Å–∏—é...${NC}"
    if [ -f "build/SaturVST_artefacts/Standalone/SaturVST.app/Contents/MacOS/SaturVST" ]; then
        open build/SaturVST_artefacts/Standalone/SaturVST.app
        echo -e "${GREEN}‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!${NC}"
    else
        echo -e "${RED}‚ùå Standalone –≤–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª–Ω—É—é —Å–±–æ—Ä–∫—É.${NC}"
        exit 1
    fi
}

# –û—á–∏—Å—Ç–∫–∞
clean_build() {
    echo -e "${YELLOW}üßπ –û—á–∏—â–∞–µ–º build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é...${NC}"
    if [ -d "build" ]; then
        rm -rf build
        echo -e "${GREEN}‚úÖ Build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞${NC}"
    else
        echo -e "${YELLOW}üìÅ Build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç${NC}"
    fi
}

# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞
rebuild() {
    echo -e "${PURPLE}üîÑ –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ SaturVST...${NC}"
    clean_build
    full_build
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-build}" in
    "build")
        full_build
        ;;
    "quick")
        quick_build
        ;;
    "run")
        build_and_run
        ;;
    "clean")
        clean_build
        ;;
    "rebuild")
        rebuild
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac 